{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/martin.kuchar/Development/React/portfolio/portfolio/src/pages/Contact.js\";\nimport React from 'react';\nimport Myself from '../components/Myself';\nimport Content from '../components/Content';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from 'axios';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value; // if the input was checkbox then value is checkbox\n\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // prevent refreshing after submiting the form\n\n      this.setState({\n        disabled: true,\n        emailSent: false\n      }); // We pass the whole state, and in backend we choose what we actually need\n\n      Axios.post('http://localhost:3030/api/email', this.state).then(res => {\n        if (res.data.success) {\n          this.setState({\n            disabled: false,\n            emailSent: true\n          });\n        } else {\n          this.setState({\n            disabled: false,\n            emailSent: false\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          disabled: false,\n          emailSent: false\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"95vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Myself, {\n        title: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"full-name\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"full-name\",\n              name: \"name\",\n              type: \"text\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: this.state.email,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"message\",\n              name: \"message\",\n              as: \"textarea\",\n              rows: \"3\",\n              value: this.state.message,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"d-inline-block\",\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: this.state.disabled,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), this.state.emailSent === true && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"d-inline success-msg\",\n            children: \"Email Sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 60\n          }, this), this.state.emailSent === false && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"d-inline err-msg\",\n            children: \"Email Not Sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Contact;","map":{"version":3,"sources":["/Users/martin.kuchar/Development/React/portfolio/portfolio/src/pages/Contact.js"],"names":["React","Myself","Content","Form","Button","Axios","Contact","Component","constructor","props","handleChange","event","target","value","type","checked","name","setState","handleSubmit","preventDefault","disabled","emailSent","post","state","then","res","data","success","catch","err","email","message","render","height","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Myself from '../components/Myself';\nimport Content from '../components/Content';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from 'axios';\n\nclass Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            disabled: false,\n            emailSent: null,\n        }\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value; // if the input was checkbox then value is checkbox\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault(); // prevent refreshing after submiting the form\n\n        this.setState({\n            disabled: true,\n            emailSent: false\n        });\n\n\n        // We pass the whole state, and in backend we choose what we actually need\n        Axios.post('http://localhost:3030/api/email', this.state)\n            .then(res => {\n                if(res.data.success) {\n                    this.setState({\n                        disabled: false,\n                        emailSent: true\n                    });\n                } else {\n                    this.setState({\n                        disabled: false, \n                        emailSent: false\n                    });\n                }\n            }).catch(err => {\n                this.setState({\n                    disabled: false,\n                    emailSent: false\n                });\n            })\n    }\n\n    render() {\n        return(\n            <div style = {{height:\"95vh\"}}>\n                <Myself title={this.props.title} />\n\n                <Content>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n                            <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\n                            <Form.Control id=\"full-name\" name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label htmlFor=\"email\">Email</Form.Label>\n                            <Form.Control id=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label htmlFor=\"message\">Message</Form.Label>\n                            <Form.Control id=\"message\" name=\"message\" as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleChange}></Form.Control>\n                        </Form.Group>\n\n                        <Button className=\"d-inline-block\" variant=\"primary\" type=\"submit\" disabled={this.state.disabled}>\n                            Send\n                        </Button>\n                        { this.state.emailSent === true && <p className=\"d-inline success-msg\">Email Sent</p> }\n                        { this.state.emailSent === false && <p className=\"d-inline err-msg\">Email Not Sent</p> }\n                    </Form>\n                </Content>\n            </div>\n        )\n    }\n};\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}